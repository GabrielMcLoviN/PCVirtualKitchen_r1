{"id":"onbI","dependencies":[{"name":"A:\\Code\\projects\\pc\\pcpano1\\app-files\\package.json","includedInParent":true,"mtime":1614283944862},{"name":"A:\\Code\\projects\\pc\\pcpano1\\app-files\\node_modules\\marzipano\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";module.exports=[\"#ifdef GL_FRAGMENT_PRECISION_HIGH\",\"precision highp float;\",\"#else\",\"precision mediump float\",\"#endif\",\"uniform sampler2D uSampler;\",\"uniform float uOpacity;\",\"uniform float uTextureX;\",\"uniform float uTextureY;\",\"uniform float uTextureWidth;\",\"uniform float uTextureHeight;\",\"uniform vec4 uColorOffset;\",\"uniform mat4 uColorMatrix;\",\"varying vec4 vRay;\",\"const float PI = 3.14159265358979323846264;\",\"void main(void) {\",\"  float r = inversesqrt(vRay.x * vRay.x + vRay.y * vRay.y + vRay.z * vRay.z);\",\"  float phi  = acos(vRay.y * r);\",\"  float theta = atan(vRay.x, -1.0*vRay.z);\",\"  float s = 0.5 + 0.5 * theta / PI;\",\"  float t = 1.0 - phi / PI;\",\"  s = s * uTextureWidth + uTextureX;\",\"  t = t * uTextureHeight + uTextureY;\",\"  vec4 color = texture2D(uSampler, vec2(s, t)) * uColorMatrix + uColorOffset;\",\"  gl_FragColor = vec4(color.rgba * uOpacity);\",\"}\"].join(\"\\n\");"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":16,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":18,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":18,"column":0},"generated":{"line":1,"column":20}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":18,"column":0},"generated":{"line":1,"column":28}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":19,"column":0},"generated":{"line":1,"column":29}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":20,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":21,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":22,"column":0},"generated":{"line":1,"column":98}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":23,"column":0},"generated":{"line":1,"column":124}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":25,"column":0},"generated":{"line":1,"column":133}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":26,"column":0},"generated":{"line":1,"column":163}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":27,"column":0},"generated":{"line":1,"column":189}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":28,"column":0},"generated":{"line":1,"column":216}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":29,"column":0},"generated":{"line":1,"column":243}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":30,"column":0},"generated":{"line":1,"column":274}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":31,"column":0},"generated":{"line":1,"column":306}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":32,"column":0},"generated":{"line":1,"column":335}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":34,"column":0},"generated":{"line":1,"column":364}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":36,"column":0},"generated":{"line":1,"column":385}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":38,"column":0},"generated":{"line":1,"column":431}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":39,"column":0},"generated":{"line":1,"column":451}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":40,"column":0},"generated":{"line":1,"column":531}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":41,"column":0},"generated":{"line":1,"column":566}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":42,"column":0},"generated":{"line":1,"column":611}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":43,"column":0},"generated":{"line":1,"column":649}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":45,"column":0},"generated":{"line":1,"column":679}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":46,"column":0},"generated":{"line":1,"column":718}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":48,"column":0},"generated":{"line":1,"column":758}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":49,"column":0},"generated":{"line":1,"column":838}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":50,"column":0},"generated":{"line":1,"column":886}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":51,"column":0},"generated":{"line":1,"column":891}},{"source":"node_modules/marzipano/src/shaders/fragmentEquirect.js","original":{"line":51,"column":0},"generated":{"line":1,"column":896}}],"sources":{"node_modules/marzipano/src/shaders/fragmentEquirect.js":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nmodule.exports = [\n'#ifdef GL_FRAGMENT_PRECISION_HIGH',\n'precision highp float;',\n'#else',\n'precision mediump float',\n'#endif',\n\n'uniform sampler2D uSampler;',\n'uniform float uOpacity;',\n'uniform float uTextureX;',\n'uniform float uTextureY;',\n'uniform float uTextureWidth;',\n'uniform float uTextureHeight;',\n'uniform vec4 uColorOffset;',\n'uniform mat4 uColorMatrix;',\n\n'varying vec4 vRay;',\n\n'const float PI = 3.14159265358979323846264;',\n\n'void main(void) {',\n'  float r = inversesqrt(vRay.x * vRay.x + vRay.y * vRay.y + vRay.z * vRay.z);',\n'  float phi  = acos(vRay.y * r);',\n'  float theta = atan(vRay.x, -1.0*vRay.z);',\n'  float s = 0.5 + 0.5 * theta / PI;',\n'  float t = 1.0 - phi / PI;',\n\n'  s = s * uTextureWidth + uTextureX;',\n'  t = t * uTextureHeight + uTextureY;',\n\n'  vec4 color = texture2D(uSampler, vec2(s, t)) * uColorMatrix + uColorOffset;',\n'  gl_FragColor = vec4(color.rgba * uOpacity);',\n'}'\n].join('\\n');\n"},"lineCount":null}},"error":null,"hash":"d71f999b1163987b9c4031d1f1e03067","cacheData":{"env":{}}}